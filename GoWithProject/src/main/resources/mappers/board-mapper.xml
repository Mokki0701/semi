<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN " "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.gowith.board.model.mapper.BoardMapper">
	
	<update id="boardFavortie">
		DELETE FROM MEMBER_MENU
		WHERE MEMBER_NO = #{loginMemberNo}
		AND BOTTOM_MENU_CODE = #{bottomMenuCode}
	</update>
	
	<insert id="boardInsertFavorite">
		INSERT INTO MEMBER_MENU
		VALUES (#{loginMemberNo}, #{bottomMenuCode})
	</insert>
	
	
	<select id="getBoardList">
		SELECT BOARD_NO, BOARD_TITLE , MEMBER_NICKNAME, READ_COUNT, BOARD_NOTIFICATION ,BOARD_LIKE_COUNT,
				(SELECT COUNT(*) 
				FROM "COMMENT" C
				WHERE C.BOARD_NO = B.BOARD_NO
				AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
				
				
				<![CDATA[
				CASE 
					WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
					THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
					
					WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 
					THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
					
					WHEN SYSDATE - BOARD_WRITE_DATE < 1  
					THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
					
					ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
					
				END BOARD_WRITE_DATE
				]]>
				
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOTTOM_MENU_CODE = #{bottomMenuCode}
		AND BOARD_DEL_FL = 'N'
		ORDER BY CASE WHEN BOARD_NOTIFICATION  = 'Y' THEN 1 ELSE 2 END, BOARD_NO DESC
	</select>
	
	
	
	<select id="getListCount">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOTTOM_MENU_CODE = #{bottomMenuCode}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	
	
	<select id="getFavorite">
		SELECT COUNT(*)
		FROM MEMBER_MENU
		WHERE BOTTOM_MENU_CODE = #{bottomMenuCode}
		AND MEMBER_NO = #{loginMemberNo}
	</select>
	
	
	
	<select id="bottomTopMenu">
		SELECT * FROM TOP_MENU
	</select>
	
	
	
	
	
	
	<select id="getSearchCount">
		SELECT COUNT(*) FROM "BOARD"
		
		WHERE BOTTOM_MENU_CODE = #{bottomMenuKey}
		AND BOARD_DEL_FL = 'N'
		AND TOP_MENU_CODE = #{topMenuKey}
		
		<choose>
			<when test='searchKey == "t"'>
				AND BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
			
			<when test='searchKey == "c"'>
				AND BOARD_CONTENT LIKE '%' || #{query} || '%'
			</when>
			
			<when test='searchKey == "tc"'>
				AND ( 
					BOARD_TITLE   LIKE '%' || #{query} || '%'
					OR  
					BOARD_CONTENT LIKE '%' || #{query} || '%'
				)
			</when>
		
			
		</choose>
		
		<choose>
			<when test='periodKey == "day"'>
				AND BOARD_WRITE_DATE >= BOARD_WRITE_DATE - 1
			</when>
			
			<when test='periodKey == "week"'>
				AND BOARD_WRITE_DATE >= BOARD_WRITE_DATE - 7
			</when>
			
			<when test='periodKey == "month"'>
				AND BOARD_WRITE_DATE >= BOARD_WRITE_DATE - 30
			</when>
			
			<!-- 일년인 경우 -->
			<otherwise>
				AND BOARD_WRITE_DATE >= BOARD_WRITE_DATE - 365
			</otherwise>
			
		</choose>
		
		
	</select>
	
	
	
	
	<select id="getSearchList">
		SELECT BOARD_NO, BOARD_TITLE , MEMBER_NICKNAME, READ_COUNT, BOARD_NOTIFICATION ,BOARD_LIKE_COUNT,
				(SELECT COUNT(*) 
				FROM "COMMENT" C
				WHERE C.BOARD_NO = B.BOARD_NO
				AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
				
				
				<![CDATA[
				CASE 
					WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
					THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
					
					WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 
					THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
					
					WHEN SYSDATE - BOARD_WRITE_DATE < 1  
					THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
					
					ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
					
				END BOARD_WRITE_DATE
				]]>
				
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOTTOM_MENU_CODE = #{bottomMenuKey}
		AND BOARD_DEL_FL = 'N'
		AND TOP_MENU_CODE = #{topMenuKey}
		
		<choose>
			<when test='searchKey == "t"'>
				AND BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
			
			<when test='searchKey == "c"'>
				AND BOARD_CONTENT LIKE '%' || #{query} || '%'
			</when>
			
			<when test='searchKey == "tc"'>
				AND ( 
					BOARD_TITLE   LIKE '%' || #{query} || '%'
					OR  
					BOARD_CONTENT LIKE '%' || #{query} || '%'
				)
			</when>
			
		</choose>
		
		<choose>
			<when test='periodKey == "day"'>
				AND BOARD_WRITE_DATE >= BOARD_WRITE_DATE - 1
			</when>
			
			<when test='periodKey == "week"'>
				AND BOARD_WRITE_DATE >= BOARD_WRITE_DATE - 7
			</when>
			
			<when test='periodKey == "month"'>
				AND BOARD_WRITE_DATE >= BOARD_WRITE_DATE - 30
			</when>
			
			<!-- 일년인 경우 -->
			<otherwise>
				AND BOARD_WRITE_DATE >= BOARD_WRITE_DATE - 365
			</otherwise>
			
		</choose>
		
		ORDER BY CASE WHEN BOARD_NOTIFICATION  = 'Y' THEN 1 ELSE 2 END, BOARD_NO DESC
		
	
	</select>
	
	
	
	
	
	<select id="getBottomName">
		SELECT BOTTOM_MENU_CODE
		FROM BOTTOM_MENU
		WHERE BOTTOM_MENU_CODE = #{bottomMenuKey}
	</select>
	
	
	
	<select id="selectBottomList">
		SELECT * FROM BOTTOM_MENU
		WHERE TOP_MENU_CODE = #{topMenuCode}
	</select>
	
	
	<resultMap type="Board" id="board_dt">
		
		<id property="boardNo" column="BOARD_NO"/>
		
		<collection 
		property="imgList"
		select = "selectImgList"
		column="BOARD_NO"
		javaType ="java.util.ArrayList"
		ofType = "BoardImg"
		/>
		
		
	</resultMap>
	
	
	<select id="boardDetail" resultMap="board_dt">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, READ_COUNT, 
			MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, MEMBER_RANK,
			TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
			TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_UPDATE_DATE, BOARD_LIKE_COUNT,
			
			(SELECT NEXT_BOARD_NO FROM (
				SELECT BOARD_NO, LEAD (BOARD_NO) OVER(ORDER BY BOARD_NO) NEXT_BOARD_NO
				FROM (
					SELECT BOARD_NO
					FROM "BOARD"
					WHERE BOTTOM_MENU_CODE =  #{bottomMenuCode}  
					)
				ORDER BY CASE WHEN BOARD_NOTIFICATION  = 'Y' THEN 1 ELSE 2 END, BOARD_NO DESC
				)
				WHERE BOARD_NO = #{boardNo}
			) NEXT_BOARD_NO,
			
			(SELECT PRE_BOARD_NO FROM (
				SELECT BOARD_NO, LAG (BOARD_NO) OVER(ORDER BY BOARD_NO) PRE_BOARD_NO
				FROM (
					SELECT BOARD_NO
					FROM "BOARD"
					WHERE BOTTOM_MENU_CODE = #{bottomMenuCode} 
					)
				ORDER BY CASE WHEN BOARD_NOTIFICATION  = 'Y' THEN 1 ELSE 2 END, BOARD_NO DESC
				)
				WHERE BOARD_NO = #{boardNo}
			) PRE_BOARD_NO,
			
			(SELECT COUNT(*)
			FROM "COMMENT"
			WHERE BOARD_NO = #{boardNo}
			) COMMENT_COUNT,
			
			<![CDATA[  
			(SELECT COUNT(*) FROM "COMMENT"
			JOIN "BOARD" USING(BOARD_NO)
			WHERE BOARD_NO = #{boardNo}
			AND SYSDATE - 1 < COMMENT_WRITE_DATE
			) CHECK_COMMENT_DATE
			]]>
			
		
		FROM "BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_NO = #{boardNo}
		
	</select>
	
	<select id="selectImgList" resultType="BoardImg">
		SELECT *
		FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		ORDER BY IMG_ORDER
	</select>
	
	
	<select id="commentList" resultType="Comment">
		SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			    TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_COMMENT_NO, COMMENT_DEL_FL, (#{checkComment}) COMMENT_CHECK, MEMBER_RANK
			FROM "COMMENT"
			JOIN "MEMBER" USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY 
			CASE WHEN COMMENT_CHECK = '1' THEN COMMENT_NO END ASC,
			CASE WHEN COMMENT_CHECK = '2' THEN COMMENT_NO END DESC
	</select>
	
	
	
	<update id="increaseReadCount">
		UPDATE "BOARD" SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<select id="resultReadCount">
		SELECT READ_COUNT FROM "BOARD"
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<select id="bottomMenuName">
		SELECT BOTTOM_MENU_NAME FROM BOTTOM_MENU
		WHERE BOTTOM_MENU_CODE = #{bottomMenuCode}
	</select>
	
	
	
	
	

</mapper>
